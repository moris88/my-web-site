name: Gemini Code Review

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR Diff
        id: get_diff
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          BASE_REF=${{ github.event.pull_request.base.sha }}
          HEAD_REF=${{ github.event.pull_request.head.sha }}
          DIFF=$(git diff $BASE_REF $HEAD_REF)

          if [ -z "$DIFF" ]; then
            echo "::warning::Nessun diff trovato per questa PR. La review di Gemini verrà saltata."
            echo "diff_output=" >> $GITHUB_OUTPUT
          else
            echo "diff_output<<EOF" >> $GITHUB_OUTPUT
            echo "$DIFF" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi


      - name: Read Gemini Prompt from File
        id: read_prompt_file
        run: |
          PROMPT_FILE="review/copilot-instructions.md" # O il tuo percorso: es. .github/PROMPT.md
          if [ -f "$PROMPT_FILE" ]; then
            PROMPT_CONTENT=$(cat "$PROMPT_FILE")
            echo "prompt_content<<EOF" >> $GITHUB_OUTPUT
            echo "$PROMPT_CONTENT" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "::warning file=$PROMPT_FILE::File del prompt non trovato. Verrà utilizzato un prompt predefinito."
            echo "prompt_content=Esegui una code review del seguente diff. Identifica potenziali bug, miglioramenti di performance, chiarezza del codice, aderenza a best practice e suggerisci test mancanti. Fornisci i tuoi suggerimenti in un formato conciso e leggibile." >> $GITHUB_OUTPUT
          fi

      - name: Delete Previous Gemini Review Comments
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            const botName = 'github-actions[bot]';

            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber,
            });

            for (const comment of comments) {
              if (comment.user.login === botName && comment.body.includes('')) {
                console.log(`Deleting comment ID: ${comment.id}`);
                await github.rest.issues.deleteComment({
                  owner,
                  repo,
                  comment_id: comment.id,
                });
              }
            }
      - name: Run Gemini Review Script (Bash)
        id: gemini_review
        env:
            # Passa direttamente la GEMINI_API_KEY come variabile d'ambiente allo script Bash
            GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
            PR_DIFF="${{ steps.get_diff.outputs.diff_output }}"
            GEMINI_PROMPT="${{ steps.read_prompt_file.outputs.prompt_content }}"

            TEMP_DIFF_FILE=$(mktemp)
            TEMP_PROMPT_FILE=$(mktemp)

            echo "$PR_DIFF" > "$TEMP_DIFF_FILE"
            echo "$GEMINI_PROMPT" > "$TEMP_PROMPT_FILE"

            chmod +x review_script.sh
            ./review/gemini_review_script.sh "$TEMP_DIFF_FILE" "$TEMP_PROMPT_FILE" >> "$GITHUB_OUTPUT"

            rm "$TEMP_DIFF_FILE" "$TEMP_PROMPT_FILE"

      - name: Add New Gemini Review Comment to PR
        uses: actions/github-script@v7
        # Esegui questo step solo se lo script ha prodotto un commento e lo step precedente è stato un successo
        if: success() && steps.gemini_review.outputs.review_comment != ''
        with:
          script: |
            const comment = `${{ steps.gemini_review.outputs.review_comment }}`;
            const prNumber = context.payload.pull_request.number;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });