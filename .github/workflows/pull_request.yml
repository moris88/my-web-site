name: LLaMA Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  review_code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Scarica tutta la cronologia git
    
      - name: Debugging information
        run: |
          echo "Pull request base: ${{ github.event.pull_request.base.ref }}"
          echo "Current SHA: ${{ github.sha }}"
          git branch -a  # Elenca tutti i branch
          git log --oneline  # Mostra i commit recenti
          git show-branch  # Mostra le branch attuali e il loro stato

      - name: Set the base and head commit
        id: set_commits
        run: |
          echo "Base branch: ${{ github.event.pull_request.base.ref }}"
          BASE_COMMIT=$(git merge-base HEAD ${{ github.event.pull_request.base.ref }})
          HEAD_COMMIT=${{ github.sha }}
          echo "BASE_COMMIT=$BASE_COMMIT" >> $GITHUB_ENV
          echo "HEAD_COMMIT=$HEAD_COMMIT" >> $GITHUB_ENV

      - name: Get modified files
        id: get_modified_files
        run: |
          MODIFIED_FILES=$(git diff --name-only $BASE_COMMIT $HEAD_COMMIT)
          echo "MODIFIED_FILES=$MODIFIED_FILES" >> $GITHUB_ENV

      - name: Analyze code with LLaMA (Hugging Face)
        id: llama-review
        run: |
          HF_API_URL="https://api-inference.huggingface.co/models/meta-llama/Llama-3.2-1B"
          HF_API_TOKEN="${{ secrets.HUGGINGFACE_API_TOKEN }}"

          # Loop through the modified files and send them to LLaMA for analysis
          IFS=',' read -r -a files <<< "$MODIFIED_FILES"
          for file in "${files[@]}"; do
            if [[ $file == *.js || $file == *.ts || $file == *.jsx || $file == *.tsx ]]; then
              echo "Reviewing $file"
              FILE_CONTENT=$(cat "$file")

              # Prepare JSON payload
              PAYLOAD=$(jq -n --arg content "$FILE_CONTENT" '{ "inputs": $content }')

              # Call Hugging Face API for LLaMA analysis
              REVIEW=$(curl -X POST "$HF_API_URL" \
              -H "Authorization: Bearer $HF_API_TOKEN" \
              -H "Content-Type: application/json" \
              -d "$PAYLOAD")

              echo "LLaMA Review: $REVIEW"
            fi
          done

      - name: Create PR comment with LLaMA review
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## LLaMA Review

            Here are the insights for your code:
            - **Logic and Syntax Errors:**
              - [list detected errors from the LLaMA response]
            - **Potential Issues:**
              - [list possible issues]
            - **Suggestions:**
              - [list possible improvements]

            _Review was generated by LLaMA via Hugging Face API._
